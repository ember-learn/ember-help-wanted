export default [
  {
    "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/165",
    "repository_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript",
    "labels_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/165/labels{/name}",
    "comments_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/165/comments",
    "events_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/165/events",
    "html_url": "https://github.com/typed-ember/ember-cli-typescript/issues/165",
    "id": 302844031,
    "node_id": "MDU6SXNzdWUzMDI4NDQwMzE=",
    "number": 165,
    "title": "Should `router.ts` also be supported?",
    "user": {
      "login": "Bouke",
      "id": 235882,
      "node_id": "MDQ6VXNlcjIzNTg4Mg==",
      "avatar_url": "https://avatars1.githubusercontent.com/u/235882?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Bouke",
      "html_url": "https://github.com/Bouke",
      "followers_url": "https://api.github.com/users/Bouke/followers",
      "following_url": "https://api.github.com/users/Bouke/following{/other_user}",
      "gists_url": "https://api.github.com/users/Bouke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Bouke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Bouke/subscriptions",
      "organizations_url": "https://api.github.com/users/Bouke/orgs",
      "repos_url": "https://api.github.com/users/Bouke/repos",
      "events_url": "https://api.github.com/users/Bouke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Bouke/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 985331993,
        "node_id": "MDU6TGFiZWw5ODUzMzE5OTM=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/build",
        "name": "build",
        "color": "2f72a3",
        "default": false,
        "description": "Ideas for or bugs with the build process"
      },
      {
        "id": 489412391,
        "node_id": "MDU6TGFiZWw0ODk0MTIzOTE=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/enhancement",
        "name": "enhancement",
        "color": "8ad865",
        "default": true,
        "description": ""
      },
      {
        "id": 489412392,
        "node_id": "MDU6TGFiZWw0ODk0MTIzOTI=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/help%20wanted",
        "name": "help wanted",
        "color": "7b15db",
        "default": true,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 6,
    "created_at": "2018-03-06T19:59:04Z",
    "updated_at": "2020-08-26T18:33:55Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "I've changed my `router.js` into `router.ts`. However with v2.0.0 of ember-cli-typescript, generating a new route expects `router.js` to exist. Should `router.ts` also be supported?\r\n```\r\nember generate route account/change-password\r\ninstalling route\r\n  create app\\routes\\account\\change-password.ts\r\n  create app\\templates\\account\\change-password.hbs\r\nENOENT: no such file or directory, open '..\\app\\router.js'\r\n```",
    "performed_via_github_app": null,
    "score": 1
  },
  {
    "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript-blueprints/issues/7",
    "repository_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript-blueprints",
    "labels_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript-blueprints/issues/7/labels{/name}",
    "comments_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript-blueprints/issues/7/comments",
    "events_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript-blueprints/issues/7/events",
    "html_url": "https://github.com/typed-ember/ember-cli-typescript-blueprints/issues/7",
    "id": 358691922,
    "node_id": "MDU6SXNzdWUzNTg2OTE5MjI=",
    "number": 7,
    "title": "[QUEST] Blueprints for ember-mocha 0.14",
    "user": {
      "login": "simonihmig",
      "id": 1325249,
      "node_id": "MDQ6VXNlcjEzMjUyNDk=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/1325249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/simonihmig",
      "html_url": "https://github.com/simonihmig",
      "followers_url": "https://api.github.com/users/simonihmig/followers",
      "following_url": "https://api.github.com/users/simonihmig/following{/other_user}",
      "gists_url": "https://api.github.com/users/simonihmig/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/simonihmig/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/simonihmig/subscriptions",
      "organizations_url": "https://api.github.com/users/simonihmig/orgs",
      "repos_url": "https://api.github.com/users/simonihmig/repos",
      "events_url": "https://api.github.com/users/simonihmig/events{/privacy}",
      "received_events_url": "https://api.github.com/users/simonihmig/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 1030114559,
        "node_id": "MDU6TGFiZWwxMDMwMTE0NTU5",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript-blueprints/labels/enhancement",
        "name": "enhancement",
        "color": "a2eeef",
        "default": true,
        "description": "New feature or request"
      },
      {
        "id": 1030114560,
        "node_id": "MDU6TGFiZWwxMDMwMTE0NTYw",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript-blueprints/labels/help%20wanted",
        "name": "help wanted",
        "color": "008672",
        "default": true,
        "description": "Extra attention is needed"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 0,
    "created_at": "2018-09-10T16:07:50Z",
    "updated_at": "2018-11-21T18:55:07Z",
    "closed_at": null,
    "author_association": "CONTRIBUTOR",
    "active_lock_reason": null,
    "body": "The blueprints lack support for ember-mocha 0.14 based tests, which were recently added to Ember itself, see https://github.com/emberjs/ember.js/issues/16863. \r\n\r\n- [x] acceptance-test\r\n- [ ] adapter-test\r\n- [ ] component-test\r\n- [x] controller-test\r\n- [ ] helper-test\r\n- [ ] initializer-test\r\n- [ ] instance-initializer-test\r\n- [ ] mixin-test\r\n- [ ] model-test\r\n- [x] route-test\r\n- [x] service-test\r\n- [ ] transform-test\r\n- [ ] util-test",
    "performed_via_github_app": null,
    "score": 1
  },
  {
    "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/48",
    "repository_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript",
    "labels_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/48/labels{/name}",
    "comments_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/48/comments",
    "events_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/48/events",
    "html_url": "https://github.com/typed-ember/ember-cli-typescript/issues/48",
    "id": 246181004,
    "node_id": "MDU6SXNzdWUyNDYxODEwMDQ=",
    "number": 48,
    "title": "[DRAFT!!!] QUEST: Let's type the Ember.js ecosystem!",
    "user": {
      "login": "chriskrycho",
      "id": 2403023,
      "node_id": "MDQ6VXNlcjI0MDMwMjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2403023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriskrycho",
      "html_url": "https://github.com/chriskrycho",
      "followers_url": "https://api.github.com/users/chriskrycho/followers",
      "following_url": "https://api.github.com/users/chriskrycho/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriskrycho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriskrycho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriskrycho/subscriptions",
      "organizations_url": "https://api.github.com/users/chriskrycho/orgs",
      "repos_url": "https://api.github.com/users/chriskrycho/repos",
      "events_url": "https://api.github.com/users/chriskrycho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriskrycho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 853866065,
        "node_id": "MDU6TGFiZWw4NTM4NjYwNjU=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/deferred",
        "name": "deferred",
        "color": "b1a3e2",
        "default": false,
        "description": "We have a specific reason for delaying implementation of this (but do plan to!)"
      },
      {
        "id": 489412391,
        "node_id": "MDU6TGFiZWw0ODk0MTIzOTE=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/enhancement",
        "name": "enhancement",
        "color": "8ad865",
        "default": true,
        "description": ""
      },
      {
        "id": 489412392,
        "node_id": "MDU6TGFiZWw0ODk0MTIzOTI=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/help%20wanted",
        "name": "help wanted",
        "color": "7b15db",
        "default": true,
        "description": ""
      },
      {
        "id": 655359915,
        "node_id": "MDU6TGFiZWw2NTUzNTk5MTU=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/types:core",
        "name": "types:core",
        "color": "fbca04",
        "default": false,
        "description": "Something is wrong with the Ember type definitions"
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 15,
    "created_at": "2017-07-27T21:55:50Z",
    "updated_at": "2018-10-18T18:07:39Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "# *DRAFT – STILL WORKING OUT THE DETAILS HERE! DO NOT JUMP IN JUST YET!\r\n\r\n# Let’s type the Ember.js ecosystem!\r\n\r\n- [Overview](#user-content-overview)\r\n    - [Philosophy](#user-content-philosophy)\r\n    - [Improving developer experience for all Ember.js users](#user-content-improving-developer-experience-for-all-emberjs-users)\r\n- [How to participate](#user-content-how-to-participate)\r\n    - [Addon authors](#user-content-addon-authors)\r\n        - [If you are open to someone else adding typings for your addon](#user-content-if-you-are-open-to-someone-else-adding-typings-for-your-addon)\r\n    - [Addon users](#user-content-addon-users)\r\n    - [Converting an addon to TypeScript](#user-content-converting-an-addon-to-typescript)\r\n    - [Writing type definitions](#user-content-writing-type-definitions)\r\n       - [Type definition basics](#user-content-type-definition-basics)\r\n            - [Writing *good* type definitions](#user-content-writing-good-type-definitions)\r\n            - [Structuring type definitions](#user-content-structuring-type-definitions)\r\n        - [Adding type definitions to an addon](#user-content-adding-type-definitions-to-an-addon)\r\n           - [Publication](#user-content-publication)\r\n        - [Adding type definitions to DefinitelyTyped](#user-content-adding-type-definitions-to-definitelytyped)\r\n- [Typings to Contribute](#user-content-typings-to-contribute)\r\n    - [ Top 100 Addons on Ember Observer](#user-content-top-100-addons-on-ember-observer)\r\n    - [Other addons](#user-content-other-addons)\r\n\r\n## <a name='overview'></a>Overview\r\n\r\nThe **goal** of this quest issue is to write TypeScript type definitions to cover the top 100 addons listed on [Ember Observer](https://emberobserver.com) as of the time the quest is launched. Our **bonus goal** is to type any *other* addons which want to participate, as well!\r\n\r\n### <a name='philosophy'></a>Philosophy\r\n\r\nThere are two overarching concerns that drive everything else in this quest:\r\n\r\n1. **Good type definitions are worth their weight in gold. Bad type definitions are worse than no type definitions at all.** Accordingly, our goal is not just to get *some* type definitions written, but to write *good* type definitions that actually give us these benefits, and which don’t mislead us or give us a false sense of security.\r\n\r\n2. **We should be good citizens of the Ember.js community.** We want to use TypeScript to be helpful; we do *not* want to be pushy jerks or typed-language fanatics. As part of the Ember.js ecosystem, we’re all in this together, and those of us working on the TypeScript side should never look down on people who prefer JavaScript – there are legitimate tradeoffs either direction. So, as always, let’s be kind!\r\n\r\n### <a name='improving-developer-experience-for-all-emberjs-users'></a>Improving developer experience for all Ember.js users\r\n\r\nBy doing this, we can make the experience of developing Ember apps better for *everyone* – not just TypeScript users, but all the people using plain-old JavaScript as well. An increasing number of editors will take advantage of TypeScript type definitions if they’re available to help you in your development experience, even if you’re not using TypeScript at all. And of course, if you *are* using TypeScript, having these will make all the difference in your experience of using an addon. So let’s do it!\r\n\r\n## <a name='how-to-participate'></a>How to participate\r\n\r\nFirst, a couple notes to both add-on authors and add-on users, then the nitty gritty!\r\n\r\n### <a name='addon-authors'></a>Addon authors\r\n\r\n{>> TODO <<}\r\n\r\n#### <a name='if-you-are-open-to-someone-else-adding-typings-for-your-addon'></a>If you are open to someone else adding typings for your addon\r\n\r\nOne other approach you can take, if you're interested in adding types to your addon but don't have the knowledge or bandwidth to do it yourself is to add a **Help Wanted** issue to your repository and link it here! If your repo isn't in the top-100-addons list, I'll add it anyway in its own section. If you're \r\n\r\n{>> TODO <<}\r\n\r\n### <a name='addon-users'></a>Add-on users\r\n\r\nIf you take a look at one of the addons on this list and the author hasn’t yet expressed any interest in adding TypeScript or TypeScript definitions to their addon, the *very* first thing you should do is open an issue and see if they’re open to the possibility of converting their addon to TypeScript or hosting the type definitions in the addon. We strongly recommend you just use this template when opening the issue:\r\n\r\n- **Suggested Title:** Interested in TypeScript?\r\n\r\n- **Suggested Body:**\r\n\r\n    > Hello! I use your addon and really appreciate it. I’m also participating in [this quest issue to add TypeScript support throughout the Ember.js ecosystem](https://github.com/typed-ember/ember-typings/issues/14). This will benefit to *everyone* who uses your addon, not just TypeScript users! (See [here]( improving-developer-experience-for-all-emberjs-users) for an explanation.)\r\n    > \r\n    > Are you interested in either converting the addon to use TypeScript itself, or in adding type definitions? I’d love to help out, if so! And if not, that’s just fine. Thanks!\r\n\r\n    To make it easy, you can just copy and paste this directly into the issue of a body:\r\n\r\n    ```\r\n    Hello! I use your addon and really appreciate it. I’m also participating in [this quest issue to add TypeScript support throughout the Ember.js ecosystem](https://github.com/typed-ember/ember-typings/issues/14). This will benefit to *everyone* who uses your addon, not just TypeScript users! (See [here]( improving-developer-experience-for-all-emberjs-users) for an explanation.)\r\n\r\n    Are you interested in either converting the addon to use TypeScript itself, or in adding type definitions? I’d love to help out, if so! And if not, that’s just fine. Thanks!\r\n    ```\r\n\r\nBased on their answer, you can then help them convert their addon to use TypeScript, help them add type definitions to the repository, or – and this is *very* important – just leave them alone if they’re not interested! It’s perfectly fine if addon authors aren’t interested in using TypeScript themselves or if they don’t want to take on the extra maintenance burden of hosting type definitions. ***Do not badger an addon author about TypeScript!*** If they aren’t interested, we can fall back to using [DefinitelyTyped](https://github.com/DefinitelyTyped/DefinitelyTyped) to host type definitions!\r\n\r\n## <a name='actually-doing-the-work'></a>Actually doing the work\r\n\r\nOkay, let's dive in and talk about how to do this!\r\n\r\n### <a name='converting-an-addon-to-typescript'></a>Converting an addon to TypeScript\r\n\r\n{>> TODO <<}\r\n\r\n### <a name='writing-type-definitions'></a>Writing type definitions\r\n\r\nAs noted above, the most important thing about type definitions is that they are *correct*. If they're incorrect, they'll actually lead users to write *wrong* code, and that's a deeply frustrating experience.\r\n\r\nSome general tips:\r\n\r\n1. **Wherever there is documentation, read it very carefully.** It's not always correct or up to date, but it still usually gives you a good starting point. If nothing else, it is often a good guide for what the *public API* is.\r\n\r\n2. **Read the source code for the public API.** This is the only way to actually be *sure* of what the code does. Take a look at the function arguments, and look at what is done with them. Are there optional arguments? Are the arguments \"polymorphic,\" i.e. can you pass in *either* a string *or* an array of strings *or* an object as the *n*th argument? Does it always return the same thing or not? Etc.\r\n\r\n3. **Pick something you can handle!** Your type definitions should capture everything about the actual behavior of an addon's classes and functions. Sometimes, this will be easy. Other times (here's looking at you, Ember CLI Mirage!) this will involve a *lot* of arcane type mechanics. If you're just starting out, that's okay! Pick a simpler addon. If you've got mad TypeScript chops, awesome: pick something harder!\r\n\r\n4. **Don't go it alone.** Get input along the way. The folks on the ember-cli-typescript team and many of the people hanging out in #topic-typescript on the Ember Community Slack are happy to help review your typings work and help you go from *just wrote my first type definition ever!* to mentoring *other* people! And getting feedback along the way will help us achieve our goal\r\n\r\n{>> TODO: how to write a good type definition <<}\r\n\r\n#### <a name='type-definition-basics'></a>Type definition basics\r\n\r\n{>> TODO: `.d.ts` files, modules, exports <<}\r\n\r\n#### <a name='writing-good-type-definitions'></a>Writing *good* type definitions\r\n\r\nFor more complicated types, you may need to lean on TypeScript's optionals, generics, union and intersection types, overloading, or the combination of several of those.\r\n\r\n##### Optionals\r\n\r\nOne of the most common scenarios you'll need to cover is handling *optional* arguments or properties\r\n\r\n###### Arguments\r\n\r\n{>> TODO <<}\r\n\r\n###### Properties\r\n\r\nThere are two ways you'll commonly need to write out optional properties. One is when *some* items on a type are required and *others* are optional. In that case, you can write the type with each argument specified explicitly as being optional or not:\r\n\r\n```ts\r\ntype ATypicalWesternName = {\r\n  first: string;\r\n  middle?: string;\r\n  last: string;\r\n}\r\n```\r\n\r\nThe other case is where *every* property on an object is optional. (This tends to come up when you're passing in a configuration/options hash to a function.) In that case, you can use the build-in `Partial<T>`  type, which makes *every* property optional:\r\n\r\n```ts\r\ntype Options = {\r\n  doSomething: boolean;\r\n  withSomeValue: number;\r\n};\r\n\r\nexport declare function takesOptions(options: Partial<Options>);\r\n```\r\n\r\nIf *any* of the arguments are required, don't use `Partial`, spell it out explicitly. Alternatively, build an *intersection* type from the combination of required properties and optional properties.\r\n\r\n```ts\r\ntype WesternRequiredName = {\r\n  first: string;\r\n  last: string;\r\n}\r\n\r\ntype WesternOptionalName = {\r\n  middle?: string;\r\n}\r\n\r\ntype WesternName = WesternRequiredName & WesternOptionalName;\r\n```\r\n\r\n(This is something of a last resort, but it's there when you need it!)\r\n\r\n##### Union types\r\n\r\nUnion types (described [here](http://www.typescriptlang.org/docs/handbook/advanced-types.html#union-types)) let you describe the *either-or* scenario. If a function can take *either* a number *or* a string *or* a boolean as an argument, you can write it like this:\r\n\r\n```ts\r\ndeclare function takesAUnion(firstArg: number | string | boolean);\r\n```\r\n\r\nLikewise, if a function *returns* more than one kind of things, you can write it like this:\r\n\r\n```ts\r\ndeclare function returnsAUnion(): number | string | boolean;\r\n```\r\n\r\nThis is most useful for times when there is no *distinct* mapping between the input and output type. For example, the helpers in the `ember-native-dom-helpers` helpers (now living at `@ember/test-helpers`) all take *either* a `string` *or* an `HTMLElement` as their argument, but they always return the same kind of thing. The function signature for `click`, for example, is:\r\n\r\n```ts\r\nexport function click(selector: string | Element): Promise<void>;\r\n```\r\n\r\nHowever, in some circumstances, a function might take more than one input type and have different output types – but each kind of input would always have the same kind of output. For that, we'll use overloading.\r\n\r\n##### Overloading\r\n\r\nWith *overloading*, we can tell TypeScript that a single function or method has different \"signatures.\" For example, you may recall that {>> TODO: example <<}\r\n\r\n##### Generics\r\n\r\n#### <a name='structuring-type-definitions'></a>Structuring type definitions\r\n\r\nThe basic structure of the type definition should mirror the structure of the addon or library you're documenting. However, the layout of Ember addons imposes specific requirements that are somewhat unique. In general in TypeScript, it is a good idea to lay out more complicated definitions side-by-side with the modules they document:\r\n\r\n```\r\nsrc/\r\n  index.js\r\n  index.d.ts\r\n  some-other-module.js\r\n  some-other-module.d.ts\r\n```\r\n\r\nHowever, in the current file system layout for Ember addons, the source location and the \"lookup location\" where you import the files from are not the same. That is, you don't `import Foo from 'an-addon/addon/services/foo';`, you `import Foo from 'an-addon/services/foo';`. This essentially constrains us to writing all of our type definitions in a single file. (The [Module Unification](https://github.com/emberjs/rfcs/pull/143) file layout [will help](https://github.com/emberjs/ember.js/issues/16373) with this, but it will be some time before most addons are using it.)\r\n\r\n**Aside:** The Ember types, as they stand today, are *not* a good example for how to document most libraries: we have documented Ember as it exists, where you can import things *both* in the new modules API *and* via the old global. As Ember itself moves to using the module structure under the hood and those packages are actually installed on the file system, type definitions should move to mirror them.\r\n\r\nFor a simple addon you can just put the type definitions in the root at `index.d.ts`, like this:\r\n\r\n```\r\nthe-addon/\r\n  addon/\r\n    index.js\r\n  app/\r\n  index.d.ts\r\n  index.js\r\n  package.json\r\n```\r\n\r\nA prime example of this kind of setup is [ember-test-friendly-error-handler](https://github.com/rwjblue/ember-test-friendly-error-handler).\r\n\r\n{>> TODO: example addon for multiple modules in `index.d.ts` – ember-qunit maybe? <<}\r\n\r\n{>> TODO: structure – modules etc. <<}\r\n\r\n#### <a name='adding-type-definitions-to-an-addon'></a>Adding type definitions to an addon\r\n\r\n[**Reminder:** only do this *after* you've checked with the author(s) of the addon that they're interested!]\r\n\r\nOnce you have a version of the types working solidly in your own application(s), you can open a pull request to the addon with those types. The pull request should include:\r\n\r\n- the `index.d.ts` file in the root of the repository\r\n- the `\"types\"` key in `package.json` pointing to the file – for the sake of forwards-compatibility, so that if the type definitions are expanded-and-moved at a later time, things don't surprisingly break\r\n- a note in the README that type definitions are supplied with the addon\r\n\r\nIt should also have a good writeup, describing any open questions, pain points, limitations, etc. – that will help the addon maintainer and the reviewers help you wrap everything up with a bow!\r\n\r\nYour best bet is to solicit feedback from both the addon maintainer and from knowledgeable folks in #topic-typescript on the Ember Community Slack. The Typed Ember team, currently consisting of @dfreeman, @dwickern, @jamescdavis, and @chriskrycho, are happy to help review these requests, and over time others will be experienced enough to chip in as well!\r\n\r\nIf you get feedback that things need tweaking, don't worry! Type definitions are hard to get *just* right, and the definitions for Ember have been through a *ton* of revisions and we're constantly finding issues with and helping each other with those, too!\r\n\r\n##### <a name='publication'></a>Publication\r\n\r\nYou should also make sure the type definition is *not excluded* by `.npmignore` file and if the `package.json` is manually specifying files via the `\"files\"` key, that `index.d.ts` is in the list. (This is unusual for Ember addons.) See [the documentation for the `files` key](https://docs.npmjs.com/files/package.json#files) for details.\r\n\r\n#### <a name='adding-type-definitions-to-definitelytyped'></a>Adding type definitions to DefinitelyTyped\r\n\r\n{>> TODO <<}\r\n\r\n[DefinitelyTyped]( https://github.com/DefinitelyTyped/DefinitelyTyped ) is an officially supported, Microsoft-owned GitHub repository which publishes to the `@types` npm namespace. Type definitions are automatically published from each folder in [the `types` directory]( https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types) in the repository.\r\n\r\nThe process when using DefinitelyTyped is mostly the same as when adding them directly to an addon. When opening a PR for a set of types on DefinitelyTyped, as when doing it directly to an addon, you should get reviews from other folks who are comfortable with both TypeScript and the addon. The Typed Ember team, currently consisting of @dfreeman, @dwickern, @jamescdavis, and @chriskrycho, are happy to help review these requests, and over time others will be experienced enough to chip in as well! \r\n\r\nOnce it's in place, if the addon author is up for it, you can then open a PR to add a note to their README indicating that types are available at `@types/<the-addon-name>`. You should also open a PR to this repository to update the [known-typings.md](https://github.com/typed-ember/ember-cli-typescript/blob/master/known-typings.md) file.\r\n\r\n## <a name='typings-to-contribute'></a>Typings to contribute\r\n\r\nI’ve broken this down into two categories: **Top 100 Addons on Ember Observer** and **Other addons**. Both of these are important, albeit for different reasons.\r\n\r\nThe top 100 addons on Ember Observer represent the most-installed addons in the community; their importance is probably obvious—getting typings in place for them immediately impacts the most people. *Other* addons or packages are those which may be downloaded less, but whose authors actively want to participate in the quest! We want to support both of these.\r\n\r\n### <a name='top-100-addons-on-ember-observer'></a>Top 100 Addons on Ember Observer\r\n\r\nThe top 100 add-ons in the ecosystem, by way of Ember Observer! Some of these may not need typings added; we’ll remove them as we evaluate that. There is also quite a range of variation in the complexity of these.\r\n\r\n- [ ] [ember-cli-babel](http://github.com/babel/ember-cli-babel)\r\n- [ ] [ember-try](https://github.com/ember-cli/ember-try)\r\n- [ ] [loader.js](https://github.com/ember-cli/loader.js)\r\n- [x] [ember-inflector](http://github.com/emberjs/ember-inflector) – [PR](https://github.com/emberjs/ember-inflector/pull/132)\r\n- [x] [ember-resolver](https://github.com/ember-cli/ember-resolver)\r\n- [ ] [ember-cli-sass](http://github.com/aexmachina/ember-cli-sass)\r\n- [ ] [ember-wormhole](https://github.com/yapplabs/ember-wormhole)\r\n- [ ] [ember-cli-eslint](https://github.com/ember-cli/ember-cli-eslint)\r\n- [ ] [ember-moment](https://github.com/stefanpenner/ember-moment)\r\n- [x] [ember-concurrency](https://github.com/machty/ember-concurrency) – [PR](https://github.com/machty/ember-concurrency/pull/209)\r\n- [ ] [ember-basic-dropdown](https://github.com/cibernox/ember-basic-dropdown)\r\n- [ ] [ember-power-select](https://github.com/cibernox/ember-power-select)\r\n- [ ] [ember-composable-helpers](https://github.com/DockYard/ember-composable-helpers)\r\n- [ ] [ember-browserify](https://github.com/ef4/ember-browserify)\r\n- [ ] [ember-native-dom-helpers](https://github.com/cibernox/ember-native-dom-helpers)\r\n- [ ] [ember-cli-mirage](https://github.com/samselikoff/ember-cli-mirage)\r\n- [ ] [ember-route-action-helper](https://github.com/DockYard/ember-route-action-helper)\r\n- [ ] [ember-simple-auth](https://github.com/simplabs/ember-simple-auth)\r\n- [ ] [ember-i18n](https://github.com/jamesarosen/ember-i18n)\r\n- [x] [ember-fetch](https://github.com/ember-cli/ember-fetch) – ships with typings already!\r\n- [ ] [ember-modal-dialog](https://github.com/yapplabs/ember-modal-dialog)\r\n- [ ] [ember-cli-deploy](https://github.com/ember-cli-deploy/ember-cli-deploy)\r\n- [ ] [ember-cp-validations](https://github.com/offirgolan/ember-cp-validations)\r\n- [ ] [ember-cli-code-coverage](https://github.com/kategengler/ember-cli-code-coverage)\r\n- [ ] [ember-cli-flash](https://github.com/poteto/ember-cli-flash)\r\n- [ ] [ember-cli-page-object](https://github.com/san650/ember-cli-page-object)\r\n- [ ] [ember-responsive](https://github.com/freshbooks/ember-responsive)\r\n- [ ] [ember-changeset](https://github.com/DockYard/ember-changeset)\r\n- [ ] [ember-one-way-controls](https://github.com/dockyard/ember-one-way-controls)\r\n- [ ] [ember-cli-template-lint](https://github.com/rwjblue/ember-cli-template-lint)\r\n- [ ] [emberx-select](https://github.com/thefrontside/emberx-select)\r\n- [ ] [ember-pikaday](https://github.com/edgycircle/ember-pikaday)\r\n- [ ] [ember-data-factory-guy](https://github.com/danielspaniel/ember-data-factory-guy)\r\n- [ ] [ember-exam](https://github.com/trentmwillis/ember-exam)\r\n- [ ] [ember-test-selectors](https://github.com/simplabs/ember-test-selectors)\r\n- [ ] [ember-component-css](https://github.com/ebryn/ember-component-css)\r\n- [ ] [ember-changeset-validations](https://github.com/DockYard/ember-changeset-validations)\r\n- [ ] [ember-watson](https://github.com/abuiles/ember-watson)\r\n- [ ] [torii](http://github.com/vestorly/torii)\r\n- [ ] [ember-data-model-fragments](https://github.com/lytics/ember-data-model-fragments)\r\n- [ ] [ember-local-storage](https://github.com/funkensturm/ember-local-storage)\r\n- [ ] [ember-websockets](https://github.com/thoov/ember-websockets)\r\n- [ ] [ember-intl](https://github.com/ember-intl/ember-intl)\r\n- [ ] [ember-href-to](https://github.com/intercom/ember-href-to)\r\n- [ ] [ember-bootstrap](https://github.com/kaliber5/ember-bootstrap)\r\n- [ ] [ember-metrics](https://github.com/poteto/ember-metrics)\r\n- [ ] [ember-cli-pagination](https://github.com/mharris717/ember-cli-pagination)\r\n- [ ] [ember-api-actions](https://github.com/mike-north/ember-api-actions)\r\n- [ ] [ember-cli-fastboot](https://github.com/ember-fastboot/ember-cli-fastboot)\r\n- [ ] [ember-page-title](https://github.com/tim-evans/ember-page-title)\r\n- [ ] [ember-cli-showdown](https://github.com/gcollazo/ember-cli-showdown)\r\n- [ ] [ember-router-scroll](https://github.com/dollarshaveclub/ember-router-scroll)\r\n- [ ] [ember-light-table](https://github.com/offirgolan/ember-light-table)\r\n- [ ] [ember-drag-drop](https://github.com/mharris717/ember-drag-drop)\r\n- [ ] [ember-cli-meta-tags](https://github.com/ronco/ember-cli-meta-tags)\r\n- [ ] [ember-css-modules](https://github.com/salsify/ember-css-modules)\r\n- [ ] [ember-awesome-macros](https://github.com/kellyselden/ember-awesome-macros)\r\n- [ ] [ember-engines](https://github.com/ember-engines/ember-engines)\r\n- [ ] [ember-paper](https://github.com/miguelcobain/ember-paper)\r\n- [ ] [ember-data-url-templates](https://github.com/amiel/ember-data-url-templates)\r\n- [ ] [ember-svg-jar](https://github.com/ivanvotti/ember-svg-jar)\r\n- [ ] [ember-freestyle](https://github.com/chrislopresto/ember-freestyle)\r\n- [ ] [ember-shepherd](https://github.com/shipshapecode/ember-shepherd)\r\n- [ ] [ember-cli-htmlbars](https://github.com/ember-cli/ember-cli-htmlbars)\r\n- [x] [ember-cli-htmlbars-inline-precompile](https://github.com/ember-cli/ember-cli-htmlbars-inline-precompile)\r\n- [ ] [ember-cli-dependency-checker](https://github.com/quaertym/ember-cli-dependency-checker)\r\n- [ ] [ember-cli-legacy-blueprints](https://github.com/ember-cli/ember-cli-legacy-blueprints)\r\n- [x] [ember-ajax](https://github.com/ember-cli/ember-ajax) – [issue]( https://github.com/ember-cli/ember-ajax/issues/346), PR TODO\r\n- [ ] [ember-truth-helpers](https://github.com/jmurphyau/ember-truth-helpers)\r\n- [ ] [ember-cli-moment-shim](http://github.com/jasonmit/ember-cli-moment-shim)\r\n- [x] [ember-lodash](https://github.com/mike-north/ember-lodash) – install `@types/lodash`!\r\n- [ ] [ember-get-config](https://github.com/null-null-null/ember-get-config)\r\n- [ ] [ember-require-module](https://github.com/offirgolan/ember-require-module)\r\n- [ ] [liquid-fire](https://github.com/ember-animation/liquid-fire)\r\n- [ ] [ember-string-ishtmlsafe-polyfill](https://github.com/workmanw/ember-string-ishtmlsafe-polyfill)\r\n- [ ] [ember-validators](https://github.com/offirgolan/ember-validators)\r\n- [ ] [ember-font-awesome](https://github.com/martndemus/ember-font-awesome)\r\n- [ ] [ember-radio-button](https://github.com/yapplabs/ember-radio-button)\r\n- [ ] [ember-welcome-page](https://github.com/ember-cli/ember-welcome-page)\r\n- [ ] [ember-disable-prototype-extensions](https://github.com/ember-cli/ember-disable-prototype-extensions)\r\n- [ ] [ember-sortable](https://github.com/jgwhite/ember-sortable)\r\n- [ ] [ember-cli-head](https://github.com/ronco/ember-cli-head)\r\n- [ ] [ember-cli-chai](https://github.com/ember-cli/ember-cli-chai)\r\n- [ ] [ember-sinon-qunit](https://github.com/elwayman02/ember-sinon-qunit)\r\n- [ ] [ember-click-outside](https://github.com/zeppelin/ember-click-outside)\r\n- [ ] [ember-cli-string-helpers](https://github.com/romulomachado/ember-cli-string-helpers)\r\n- [ ] [ember-lifeline](https://github.com/rwjblue/ember-lifeline)\r\n- [ ] [ember-cli-clipboard](https://github.com/jkusa/ember-cli-clipboard)\r\n- [ ] [ember-computed-decorators](https://github.com/rwjblue/ember-computed-decorators) - [PR](https://github.com/typed-ember/ember-typings/pull/12)\r\n- [x] [ember-assign-polyfill](https://github.com/shipshapecode/ember-assign-polyfill) – simply makes the polyfill available on the `Ember` global; the type definition already exists there.\r\n- [ ] [ember-can](https://github.com/minutebase/ember-can)\r\n- [ ] [ember-link-action](https://github.com/Kuzirashi/ember-link-action)\r\n- [ ] [ember-autoresize](https://github.com/tim-evans/ember-autoresize)\r\n- [ ] [ember-prop-types](https://github.com/ciena-blueplanet/ember-prop-types)\r\n- [ ] [ember-percy](https://github.com/percy/ember-percy)\r\n- [ ] [ember-math-helpers](https://github.com/shipshapecode/ember-math-helpers)\r\n- [ ] [ember-cli-postcss](https://github.com/jeffjewiss/ember-cli-postcss)\r\n- [ ] [ember-cli-segment](https://github.com/josemarluedke/ember-cli-segment)\r\n\r\n### <a name='other-addons'></a>Other addons\r\n\r\nIf your addon isn't in the top 100 on Ember Observer but you volunteer it, we'll list it here! ",
    "performed_via_github_app": null,
    "score": 1
  },
  {
    "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/147",
    "repository_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript",
    "labels_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/147/labels{/name}",
    "comments_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/147/comments",
    "events_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/147/events",
    "html_url": "https://github.com/typed-ember/ember-cli-typescript/issues/147",
    "id": 299150273,
    "node_id": "MDU6SXNzdWUyOTkxNTAyNzM=",
    "number": 147,
    "title": "Make working with linked TS addons easier?",
    "user": {
      "login": "dfreeman",
      "id": 108688,
      "node_id": "MDQ6VXNlcjEwODY4OA==",
      "avatar_url": "https://avatars2.githubusercontent.com/u/108688?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dfreeman",
      "html_url": "https://github.com/dfreeman",
      "followers_url": "https://api.github.com/users/dfreeman/followers",
      "following_url": "https://api.github.com/users/dfreeman/following{/other_user}",
      "gists_url": "https://api.github.com/users/dfreeman/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dfreeman/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dfreeman/subscriptions",
      "organizations_url": "https://api.github.com/users/dfreeman/orgs",
      "repos_url": "https://api.github.com/users/dfreeman/repos",
      "events_url": "https://api.github.com/users/dfreeman/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dfreeman/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 985331993,
        "node_id": "MDU6TGFiZWw5ODUzMzE5OTM=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/build",
        "name": "build",
        "color": "2f72a3",
        "default": false,
        "description": "Ideas for or bugs with the build process"
      },
      {
        "id": 489412391,
        "node_id": "MDU6TGFiZWw0ODk0MTIzOTE=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/enhancement",
        "name": "enhancement",
        "color": "8ad865",
        "default": true,
        "description": ""
      },
      {
        "id": 489412392,
        "node_id": "MDU6TGFiZWw0ODk0MTIzOTI=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/help%20wanted",
        "name": "help wanted",
        "color": "7b15db",
        "default": true,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 2,
    "created_at": "2018-02-21T22:18:21Z",
    "updated_at": "2018-07-06T01:30:31Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Currently there's a fair amount of [manual config](https://github.com/typed-ember/ember-cli-typescript#linking-addons) necessary for working with linked TypeScript addons. It might be useful to introduce a command like `ember ts:link-types <addon-name>` (and its dual) to automate this process.",
    "performed_via_github_app": null,
    "score": 1
  },
  {
    "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/170",
    "repository_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript",
    "labels_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/170/labels{/name}",
    "comments_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/170/comments",
    "events_url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/issues/170/events",
    "html_url": "https://github.com/typed-ember/ember-cli-typescript/issues/170",
    "id": 305367992,
    "node_id": "MDU6SXNzdWUzMDUzNjc5OTI=",
    "number": 170,
    "title": "Expand/restructure documentation",
    "user": {
      "login": "chriskrycho",
      "id": 2403023,
      "node_id": "MDQ6VXNlcjI0MDMwMjM=",
      "avatar_url": "https://avatars0.githubusercontent.com/u/2403023?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chriskrycho",
      "html_url": "https://github.com/chriskrycho",
      "followers_url": "https://api.github.com/users/chriskrycho/followers",
      "following_url": "https://api.github.com/users/chriskrycho/following{/other_user}",
      "gists_url": "https://api.github.com/users/chriskrycho/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chriskrycho/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chriskrycho/subscriptions",
      "organizations_url": "https://api.github.com/users/chriskrycho/orgs",
      "repos_url": "https://api.github.com/users/chriskrycho/repos",
      "events_url": "https://api.github.com/users/chriskrycho/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chriskrycho/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 489412392,
        "node_id": "MDU6TGFiZWw0ODk0MTIzOTI=",
        "url": "https://api.github.com/repos/typed-ember/ember-cli-typescript/labels/help%20wanted",
        "name": "help wanted",
        "color": "7b15db",
        "default": true,
        "description": ""
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [],
    "milestone": null,
    "comments": 1,
    "created_at": "2018-03-14T23:47:25Z",
    "updated_at": "2018-07-06T01:29:46Z",
    "closed_at": null,
    "author_association": "MEMBER",
    "active_lock_reason": null,
    "body": "Right now everything lives in README.md. This is (a) not sustainable and (b) not very usable.\r\n\r\nWe should refactor the documentation to live in `docs/<various files>.md`, and allow the README to be much more svelte.\r\n\r\nFor a helpful reference on the taxonomy of kinds of documentation, see [Steve Losh: Teach, Don't Tell](http://stevelosh.com/blog/2013/09/teach-dont-tell/).\r\n\r\n## Planning\r\n\r\nTODO: map out the actual structure of the documentation, as well as the desired content and structure of the README.\r\n\r\nTopics we should cover:\r\n\r\n- [ ] common problems and workarounds (essentially FAQ)\r\n    - [ ] `private` (see #212)\r\n    - [ ] generators\r\n    - [ ] current limitations\r\n- [ ] using TypeScript effectively with Ember\r\n- [ ] [class behavior](https://github.com/typed-ember/ember-cli-typescript/issues/151#issuecomment-368029737)\r\n    - [ ] `this._super` vs. `super.<methodName>`\r\n    - [ ] `constructor` and `init`\r\n    - [ ] `positionalParams` &c.\r\n- [ ] access modifiers (`public`, `protected`, `private`) (see #226)\r\n- [ ] problems when using `excludes`\r\n\r\n## Tooling\r\n\r\n- [ember-cli-addon-docs](https://ember-learn.github.io/ember-cli-addon-docs/latest)\r\n\r\n---\r\n\r\nAn informative comment from my EmberConf workshop feedback form:\r\n\r\n> It would be cool to have a list of all cases, including generators in the docs for further reference",
    "performed_via_github_app": null,
    "score": 1
  }
];
